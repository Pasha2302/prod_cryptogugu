import psycopg
from psycopg.rows import dict_row
import os
import django

# 1. –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "src.settings")

# 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Django
django.setup()

from app.models import Airdrops


class PostgresDB:
    def __init__(self, dbname, user, password, host, port):
        self.dbname = dbname
        self.user = user
        self.password = password
        self.host = host
        self.port = port
        self.conn = None

    def connect(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
        if self.conn is None:
            self.conn = psycopg.connect(
                dbname=self.dbname,
                user=self.user,
                password=self.password,
                host=self.host,
                port=self.port,
                autocommit=True,
                row_factory=dict_row  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
            )

    def execute_query(self, query, params=None):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
        self.connect()
        with self.conn.cursor() as cursor:
            cursor.execute(query, params or ())
            return cursor.fetchall() if cursor.description else None

    def execute_update(self, query, params=None):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö (INSERT, UPDATE, DELETE)."""
        self.connect()
        with self.conn.cursor() as cursor:
            cursor.execute(query, params or ())

    def close(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö."""
        if self.conn:
            self.conn.close()
            self.conn = None


def extract_filename(old_path: str) -> str | None:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –ø—É—Ç–∏ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –ø—É—Ç—å.
    """
    if not old_path:
        return None  # –ï—Å–ª–∏ –ø—É—Ç—å –ø—É—Å—Ç–æ–π, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None

    filename = os.path.basename(old_path)  # –î–æ—Å—Ç–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
    return f"airdrop_images/{filename}"  # –ù–æ–≤—ã–π –ø—É—Ç—å (Django —Å–∞–º –¥–æ–±–∞–≤–∏—Ç MEDIA_ROOT)


def save_data_airdrops(db: PostgresDB):
    """
    –ü–µ—Ä–µ–Ω–æ—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π –±–∞–∑—ã –≤ –Ω–æ–≤—É—é, –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—è –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º.
    """
    rows = db.execute_query("SELECT * FROM app_airdrops;")

    new_airdrops = []  # –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –≤—Å—Ç–∞–≤–∫–∏

    for row in rows:
        print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {row['name']}")

        new_airdrops.append(
            Airdrops(
                name=row["name"],
                status=row["status"],
                end_date=row["end_date"],
                reward=row["reward"],
                path_airdrop_img=extract_filename(row["path_coin_img"]),  # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø—É—Ç–∏
                created_at=row["created_at"],
            )
        )

    # –ú–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ Django ORM
    Airdrops.objects.bulk_create(new_airdrops)
    print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã!")


def update_image_address_airdrops(db: PostgresDB):
    pass


def main():
    # üîπ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞
    db = PostgresDB(
        dbname="coin_cgugu_prod",
        user="pavelpc",
        password="1234",
        host="127.0.0.1",
        port="5432"
    )

    save_data_airdrops(db)

    db.close()


if __name__ == '__main__':
    main()
